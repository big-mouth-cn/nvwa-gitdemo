<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<import resource="./applicationContext-contentstore-standard.xml" />
	<import resource="./applicationContext-namecode.xml" />
	<import resource="./applicationContext-jmx.xml" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:access.properties</value>
			</list>
		</property>
	</bean>

	<!-- transport -->
	<bean id="httpRequestExtFactory"
		class="org.bigmouth.nvwa.log4mongo.access.request.ProxyHttpRequestExtFactory">
	</bean>
	<bean id="httpRequestExtFilter" class="org.bigmouth.nvwa.log4mongo.access.request.HttpRequestExtFilter">
		<constructor-arg ref="httpRequestExtFactory" />
	</bean>

	<bean id="httpCodecFactory" class="org.bigmouth.nvwa.log4mongo.access.response.standard.stream.codec.HttpStreamCodecFactory">
	</bean>
	<bean id="httpProtocolCodecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		<constructor-arg ref="httpCodecFactory" />
	</bean>

	<bean id="httpResponseStreamWriteFilter" class="org.bigmouth.nvwa.log4mongo.access.response.standard.stream.codec.HttpResponseStreamWriteFilter">
	</bean>

	<bean id="accessReplier" class="com.skymobi.market.commons.transport.HttpMinaReplier">
	</bean>
	<bean id="accessReceiver" class="com.skymobi.market.commons.transport.MinaReplyReceiver"
		init-method="init" destroy-method="destroy">
		<constructor-arg>
			<bean class="com.skymobi.market.commons.transport.TcpConfig">
				<property name="reuseAddress" value="${access.tcp.reuseAddress}" />
				<property name="receiveBufferSize" value="${access.tcp.receiveBufferSize}" />
				<property name="sendBufferSize" value="${access.tcp.sendBufferSize}" />
				<property name="tcpNoDelay" value="${access.tcp.tcpNoDelay}" />
				<property name="soLinger" value="${access.tcp.soLinger}" />
				<property name="backlog" value="${access.tcp.backlog}" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<list>
				<bean class="com.channel.utils.Pair">
					<constructor-arg value="HttpResponseStreamWriteFilter" />
					<constructor-arg ref="httpResponseStreamWriteFilter" />
				</bean>
				<bean class="com.channel.utils.Pair">
					<constructor-arg value="HttpCodec" />
					<constructor-arg ref="httpProtocolCodecFilter" />
				</bean>
				<bean class="com.channel.utils.Pair">
					<constructor-arg value="HttpRequestExtWrapper" />
					<constructor-arg ref="httpRequestExtFilter" />
				</bean>
			</list>
			<!--<map>
				<entry key="HttpResponseStreamWriteFilter">
					<ref bean="httpResponseStreamWriteFilter" />
				</entry>
				<entry key="HttpCodec">
					<ref bean="httpProtocolCodecFilter" />
				</entry>
				<entry key="HttpRequestExtWrapper">
					<ref bean="httpRequestExtFilter" />
				</entry>
			</map>
		-->
		</constructor-arg>
		<constructor-arg value="${access.host}" />
		<constructor-arg value="${access.port}" />
		<property name="idleTime" value="${access.idleTime}" />
		<property name="reactor" ref="httpReactor" />
		<property name="replier" ref="accessReplier" />
		<property name="receiverMBeanName" value="${mbean.access.receiver}" />
		<property name="receiverIoStatsMBeanName" value="${mbean.access.receiver.statistics}" />
		<property name="statisticsUpdater" ref="minaStatisticsUpdater" />
		<property name="mbeanLifeCycleSupport" ref="mBeanExportSupport" />
	</bean>

	<bean id="senderTcpConfig" class="com.skymobi.market.commons.transport.TcpConfig">
		<property name="reuseAddress" value="${target.tcp.reuseAddress}" />
		<property name="receiveBufferSize" value="${target.tcp.receiveBufferSize}" />
		<property name="sendBufferSize" value="${target.tcp.sendBufferSize}" />
		<property name="tcpNoDelay" value="${target.tcp.tcpNoDelay}" />
		<property name="soLinger" value="${target.tcp.soLinger}" />
		<property name="backlog" value="${target.tcp.backlog}" />
	</bean>
	<bean id="sapProtocolCodecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		<constructor-arg ref="sapCodecFactory" />
	</bean>
	<bean id="sapCodecFactory" class="com.skymobi.market.commons.sap.codec.SapCodecFactory">
		<constructor-arg ref="ncMapper" />
	</bean>

	<bean id="accessSender" class="com.skymobi.market.commons.transport.MinaSender"
		init-method="init" destroy-method="destroy">
		<constructor-arg ref="senderTcpConfig" />
		<constructor-arg>
			<map>
				<entry key="SapCodec">
					<ref bean="sapProtocolCodecFilter" />
				</entry>
			</map>
		</constructor-arg>
		<constructor-arg value="${servicelogic.host}" />
		<constructor-arg value="${servicelogic.port}" />
		<constructor-arg>
			<bean
				class="com.skymobi.market.commons.transport.DefaultTargetSessionLocatorBuilder" >
				<constructor-arg value="${target.maxSessionCount}" />
				<constructor-arg value="${target.reconnectTimeout}" />
			</bean>
		</constructor-arg>
		<property name="callback" ref="sapCallback" />
		<property name="senderMBeanName" value="${mbean.access.sender}" />
		<property name="senderIoStatsMBeanName" value="${mbean.access.sender.statistics}" />
		<property name="statisticsUpdater" ref="minaStatisticsUpdater" />
	</bean>

	<!-- reactor -->
	<bean id="httpReactor" class="org.bigmouth.nvwa.log4mongo.access.ChinaCacheHttpReactor">
		<constructor-arg>
			<bean
				class="org.bigmouth.nvwa.log4mongo.access.request.standard.StandardHttp2SapRequestTransformer">
				<constructor-arg>
					<bean
						class="org.bigmouth.nvwa.log4mongo.access.request.standard.DefaultRequestParamSetExtractor"></bean>
				</constructor-arg>
				<constructor-arg>
					<map>
						<entry key="apk">
							<bean
								class="org.bigmouth.nvwa.log4mongo.access.request.standard.biz.ApkDownloadSapRequestFactory" />
						</entry>
						<entry key="apkIcon">
							<bean class="org.bigmouth.nvwa.log4mongo.access.request.standard.biz.ApkIconSapRequestFactory" />
						</entry>
						<entry key="apkPreview">
							<bean class="org.bigmouth.nvwa.log4mongo.access.request.standard.biz.ApkPreviewSapRequestFactory" />
						</entry>
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
		<constructor-arg ref="accessSender" />
		<constructor-arg ref="accessReplier" />
		<constructor-arg ref="httpResponseExtFactory" />
		<property name="ncMapper" ref="ncMapper" />
	</bean>

	<!-- callback -->
	<bean id="sapCallback" class="org.bigmouth.nvwa.log4mongo.access.SapCallback">
		<constructor-arg ref="sap2HttpResponseTransformer" />
		<constructor-arg ref="accessReplier" />
	</bean>
	<bean id="sap2HttpResponseTransformer"
		class="org.bigmouth.nvwa.log4mongo.access.response.standard.stream.Sap2HttpResponseStreamTransformer">
		<constructor-arg ref="httpResponseExtFactory" />
		<constructor-arg>
			<map>
				<entry>
					<key>
						<value type="com.skymobi.market.commons.sap.ExtendedItemType">APK</value>
					</key>
					<ref bean="apkContentStoreLocator" />
				</entry>
			</map>
		</constructor-arg>
		<property name="cache">
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheName" value="picContentStoreCache" />
				<property name="maxElementsInMemory" value="${pic.local.maxCachedSize}" />
				<property name="eternal" value="true" />
				<property name="overflowToDisk" value="false" />
				<property name="memoryStoreEvictionPolicy" value="LRU" />
			</bean>
		</property>
	</bean>
	<bean id="httpResponseExtFactory"
		class="org.bigmouth.nvwa.log4mongo.access.response.ProxyHttpResponseExtFactory">
		<constructor-arg ref="httpResponseFactory" />
	</bean>
	<bean id="httpResponseFactory"
		class="org.bigmouth.nvwa.log4mongo.access.response.DefaultHttpResponseFactory">
	</bean>

	<!-- name code mapping -->
	<!-- 
	<bean id="ncMapper"
		class="com.skymobi.market.commons.sap.namecode.DefaultNameCodeMapper">
	</bean>
	 -->
</beans>
