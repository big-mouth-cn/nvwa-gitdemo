<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<import resource="./applicationContext-contentstore.xml" />
	<import resource="./applicationContext-jmx.xml" />
	<import resource="./applicationContext-distributed.xml" />

	<bean id="propertyConfigurer" class="org.bigmouth.nvwa.log4mongo.zookeeper.config.ZkPropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<!-- transport -->
	<bean id="httpRequestExtFactory" class="org.bigmouth.nvwa.log4mongo.access.request.ProxyHttpRequestExtFactory">
	</bean>
	<bean id="httpRequestExtFilter" class="org.bigmouth.nvwa.log4mongo.access.request.HttpRequestExtFilter">
		<constructor-arg ref="httpRequestExtFactory" />
	</bean>

	<bean id="httpCodecFactory" class="org.bigmouth.nvwa.log4mongo.access.utils.HttpCodecFactory"></bean>
	<bean id="httpProtocolCodecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		<constructor-arg ref="httpCodecFactory" />
	</bean>

	<bean id="accessReplier" class="org.bigmouth.nvwa.log4mongo.transport.HttpMinaReplier"></bean>
	<bean id="accessReceiver" class="org.bigmouth.nvwa.log4mongo.transport.MinaReplyReceiver" init-method="init" destroy-method="destroy">
		<constructor-arg>
			<bean class="org.bigmouth.nvwa.log4mongo.transport.TcpConfig">
				<property name="reuseAddress" value="${access.tcp.reuseAddress}" />
				<property name="receiveBufferSize" value="${access.tcp.receiveBufferSize}" />
				<property name="sendBufferSize" value="${access.tcp.sendBufferSize}" />
				<property name="tcpNoDelay" value="${access.tcp.tcpNoDelay}" />
				<property name="soLinger" value="${access.tcp.soLinger}" />
				<property name="backlog" value="${access.tcp.backlog}" />
			</bean>
		</constructor-arg>
		<constructor-arg>
			<map>
				<entry key="HttpCodec">
					<ref bean="httpProtocolCodecFilter" />
				</entry>
				<entry key="HttpRequestExtWrapper">
					<ref bean="httpRequestExtFilter" />
				</entry>
				<entry key="AccessStatistics">
					<bean class="org.bigmouth.nvwa.log4mongo.access.statistics.StatisticsIoFilter" >
						<constructor-arg ref="accessStatistics" />
					</bean>
				</entry>
			</map>
		</constructor-arg>
		<constructor-arg value="${access.host}" />
		<constructor-arg value="${access.port}" />
		<property name="idleTime" value="${access.idleTime}" />
		<property name="reactor" ref="httpReactor" />
		<property name="replier" ref="accessReplier" />
		<property name="receiverMBeanName" value="${mbean.access.receiver}" />
		<property name="receiverIoStatsMBeanName" value="${mbean.access.receiver.statistics}" />
		<property name="statisticsUpdater" ref="minaStatisticsUpdater" />
		<property name="mbeanLifeCycleSupport" ref="mBeanExportSupport" />
	</bean>

	<bean id="senderTcpConfig" class="org.bigmouth.nvwa.log4mongo.transport.TcpConfig">
		<property name="reuseAddress" value="${target.tcp.reuseAddress}" />
		<property name="receiveBufferSize" value="${target.tcp.receiveBufferSize}" />
		<property name="sendBufferSize" value="${target.tcp.sendBufferSize}" />
		<property name="tcpNoDelay" value="${target.tcp.tcpNoDelay}" />
		<property name="soLinger" value="${target.tcp.soLinger}" />
		<property name="backlog" value="${target.tcp.backlog}" />
	</bean>
	<bean id="sapProtocolCodecFilter" class="org.apache.mina.filter.codec.ProtocolCodecFilter">
		<constructor-arg ref="sapCodecFactory" />
	</bean>
	<bean id="sapCodecFactory" class="org.bigmouth.nvwa.log4mongo.sap.codec.SapCodecFactory">
		<constructor-arg ref="ncMapper" />
	</bean>

	<!-- dynamic servicelogic nodes cluster -->
	<bean id="accessSender" class="org.bigmouth.nvwa.log4mongo.transport.failover.SenderCluster"
		init-method="init" destroy-method="destroy">
		<constructor-arg value="${zk.cluster.nodes}" />
		<constructor-arg ref="changeMonitor" />
		<property name="senderFactory" ref="senderFactory" />
		<property name="senderLocator" value="${cluster.loadbalance}" />
	</bean>
	<bean id="senderFactory" class="org.bigmouth.nvwa.log4mongo.transport.DefaultSenderFactory">
		<constructor-arg ref="senderTcpConfig" />
		<constructor-arg>
			<map>
				<entry key="SapCodec">
					<ref bean="sapProtocolCodecFilter" />
				</entry>
			</map>
		</constructor-arg>
		<constructor-arg value="3" />
		<constructor-arg value="10000" />

		<property name="senderMBeanName" value="0.access:type=transport,name=sender_" />
		<property name="senderIoStatsMBeanName" value="0.access:type=transport,name=senderIoStatistics_" />
		<property name="senderQueueMBeanName" value="0.access:type=transport,name=senderQueue_" />
		<property name="statisticsUpdater" ref="minaStatisticsUpdater" />
		<property name="sendFailMessageCollector" ref="sendFailMessageCollector" />
		<property name="callback" ref="sapCallback" />
	</bean>
	<bean id="sendFailMessageCollector" class="org.bigmouth.nvwa.log4mongo.transport.DelegatedSender"
		init-method="init" destroy-method="destroy">
		<property name="nextSender" ref="accessSender" />
		<property name="senderMBeanName" value="${mbean.access.sendFailMessageCollector}" />
	</bean>

	<!-- reactor -->
	<bean id="httpReactor" class="org.bigmouth.nvwa.log4mongo.access.HttpReactor">
		<constructor-arg>
			<bean class="org.bigmouth.nvwa.log4mongo.access.request.Http2SapRequestTransformer" />
		</constructor-arg>
		<constructor-arg ref="accessSender" />
		<constructor-arg ref="accessReplier" />
		<constructor-arg ref="httpResponseExtFactory" />
		<property name="ncMapper" ref="ncMapper" />
	</bean>

	<!-- callback -->
	<bean id="sapCallback" class="org.bigmouth.nvwa.log4mongo.access.SapCallback">
		<constructor-arg ref="sap2HttpResponseTransformer" />
		<constructor-arg ref="accessReplier" />
	</bean>
	<bean id="sap2HttpResponseTransformer" class="org.bigmouth.nvwa.log4mongo.access.response.Sap2HttpResponseTransformer">
		<constructor-arg ref="httpResponseExtFactory" />
		<constructor-arg ref="contentExtractorSelector" />
	</bean>
	<bean id="httpResponseExtFactory" class="org.bigmouth.nvwa.log4mongo.access.response.ProxyHttpResponseExtFactory">
		<constructor-arg ref="httpResponseFactory" />
	</bean>
	<bean id="httpResponseFactory" class="org.bigmouth.nvwa.log4mongo.access.response.DefaultHttpResponseFactory">
	</bean>

	<!-- content extractor -->
	<bean id="contentExtractorSelector" class="org.bigmouth.nvwa.log4mongo.access.service.ContentExtractorSelector">
		<constructor-arg>
			<map>
				<entry>
					<key>
						<value type="org.bigmouth.nvwa.log4mongo.sap.ExtendedItemType">FRAME</value>
					</key>
					<bean class="org.bigmouth.nvwa.log4mongo.access.service.GenericContentExtractor">
						<constructor-arg ref="frameContentStoreLocator" />
					</bean>
				</entry>
			</map>
		</constructor-arg>
	</bean>
</beans>
